# NOTE: API keys have been redacted. Copy your real anon key into a local `.env` or set
# the environment variable at runtime. NEVER commit real keys into the repo.
REDACTED_SUPABASE_KEY


# define la key solo en la sesión (si no está definida)
$env:SUPABASE_KEY = "REDACTED_SUPABASE_KEY"

$uri = "https://kxvzhmhzbnheioijthil.supabase.co/rest/v1/barber_teste"
$headers = @{ apikey = $env:SUPABASE_KEY; Authorization = "Bearer $env:SUPABASE_KEY" }

$payload = @{
  name = "PruebaNombre"
  service = "Corte"
  date = "2025-10-23"
  test_column = "valor de prueba"
} | ConvertTo-Json -Depth 4

Invoke-RestMethod -Uri $uri -Method Post -Headers $headers -Body $payload -ContentType 'application/json'

# borrar la key de la sesión cuando termines
Remove-Item Env:SUPABASE_KEY





$env:SUPABASE_KEY = "REDACTED_SUPABASE_KEY"
$headers = @{ apikey = $env:SUPABASE_KEY; Authorization = "Bearer $env:SUPABASE_KEY" }
Invoke-RestMethod -Uri "https://kxvzhmhzbnheioijthil.supabase.co/rest/v1/barber_teste?select=*&limit=10" -Method Get -Headers $headers
Remove-Item Env:SUPABASE_KEY




insertar 

$env:SUPABASE_KEY = "REDACTED_SUPABASE_KEY"
$headers = @{ apikey = $env:SUPABASE_KEY; Authorization = "Bearer $env:SUPABASE_KEY" }
$payload = @{ name='OtraPrueba'; service='Corte'; date='2025-10-24'; test_column='x' } | ConvertTo-Json
Invoke-RestMethod -Uri "https://kxvzhmhzbnheioijthil.supabase.co/rest/v1/barber_teste" -Method Post -Headers $headers -Body $payload -ContentType 'application/json'
Remove-Item Env:SUPABASE_KEY



$env:SUPABASE_KEY = "REDACTED_SUPABASE_KEY"
$headers = @{ apikey = $env:SUPABASE_KEY; Authorization = "Bearer $env:SUPABASE_KEY" }

$payload = @{ nombre = "PruebaNombre"; data = "2025-10-24" } | ConvertTo-Json
Invoke-RestMethod -Uri "https://kxvzhmhzbnheioijthil.supabase.co/rest/v1/barber_teste" -Method Post -Headers $headers -Body $payload -ContentType 'application/json'

Remove-Item Env:SUPABASE_KEY






prueva eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt4dnpobWh6Ym5oZWlvaWp0aGlsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjExODMxNjEsImV4cCI6MjA3Njc1OTE2MX0

prueva final envia y resibe

# 1) Define tu ANON key (REEMPLAZA la cadena)
$env:SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt4dnpobWh6Ym5oZWlvaWp0aGlsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjExODMxNjEsImV4cCI6MjA3Njc1OTE2MX0.ZhEZei_cdHgNDfrT2Kv0cAxmhnpmiICEqqM-rVf-wmI"

# 2) Encabezados (incluye Prefer para que devuelva la fila creada)
$headers = @{ apikey = $env:SUPABASE_KEY; Authorization = "Bearer $env:SUPABASE_KEY"; Prefer = 'return=representation' }

# 3) Payload de prueba (usar las columnas reales: nombre, data, time, service,)
$payload = @{
  name = 'testefinalll'
  date = '2025-10-24'
  time = '4:30'
  service = 'Corte'
 
} | ConvertTo-Json

# 4) Enviar POST y mostrar la fila creada
Invoke-RestMethod -Uri "https://kxvzhmhzbnheioijthil.supabase.co/rest/v1/barber_teste" `
  -Method Post -Headers $headers -Body $payload -ContentType 'application/json' | ConvertTo-Json -Depth 5

# 5) Verificar últimas filas (opcional)
Invoke-RestMethod -Uri "https://kxvzhmhzbnheioijthil.supabase.co/rest/v1/barber_teste?select=*&order=id.desc&limit=5" -Method Get -Headers $headers | ConvertTo-Json -Depth 5

# 6) Limpiar la key de la sesión
if (Test-Path Env:SUPABASE_KEY) { Remove-Item Env:SUPABASE_KEY }